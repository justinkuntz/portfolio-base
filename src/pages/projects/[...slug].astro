---
import { type CollectionEntry, getCollection } from "astro:content";
import PageLayout from "@layouts/PageLayout.astro";
import Container from "@components/Container.astro";
import Link from "@components/Link.astro";
import Image from "astro/components/Image.astro";

export async function getStaticPaths() {
  const projects = (await getCollection("projects"))
    .filter((post) => !post.data.draft)
    .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());
  return projects.map((project) => ({
    params: { slug: project.slug },
    props: project,
  }));
}
type Props = CollectionEntry<"projects">;

// Get the requested entry
const project = Astro.props;
const { collection } = project;
const { Content } = await project.render();

// Get the next and prev entries (modulo to wrap index)
const items = (await getCollection(collection))
  .filter((post) => !post.data.draft)
  .sort((a, b) => b.data.date.getTime() - a.data.date.getTime());
const index = items.findIndex((x) => x.slug === project.slug);
const prev = items[(index - 1 + items.length) % items.length];
const next = items[(index + 1) % items.length];
---

<PageLayout
  title={project.data.title}
  description={project.data.description || ""}
>
  <Container size="xl">
    <div
      class="w-full mx-auto mt-4 lg:mt-16 mb-12 lg:mb-16 grid grid-cols-1 lg:grid-cols-2 gap-4"
    >
      <div>
        <h1 class="animate text-5xl lg:text-6xl font-semibold text-surface10">
          {project.data.title}
        </h1>
        {
          (project.data.demoURL || project.data.repoURL) && (
            <nav class="mt-4 animate flex gap-1">
              {project.data.demoURL && (
                <Link href={project.data.demoURL} external>
                  {project.data.demoText}
                </Link>
              )}
              {project.data.demoURL && project.data.repoURL && (
                <span>&nbsp;/&nbsp;</span>
              )}
              {project.data.repoURL && (
                <Link href={project.data.repoURL} external>
                  {project.data.repoText}
                </Link>
              )}
            </nav>
          )
        }
      </div>
      <div class="mt-4 lg:mt-0">
        <h2 class="animate text-xl lg:text-2xl font-light text-surface10">
          {project.data.description}
        </h2>
      </div>
    </div>
    <div>
      <Image
        class="object-cover w-full h-72 md:h-[36rem] lg:h-[48rem] bg-surface6"
        src={project.data.heroImage}
        alt={project.data.heroImageAlt}
        width={1200}
        height={800}
        quality={"high"}
        densities={[1, 2]}
        loading="eager"
      />
    </div>
    <article
      class="grid grid-cols-[repeat(auto-fit,_minmax(220px,_1fr))] gap-8 mt-16 mb-24"
    >
      {
        project.data.challenge && (
          <div class="animate w-full">
            <h3 class="text-sm tracking-widest uppercase font-normal pt-4 md:pt-6 mb-4 md:mb-6 mt-0 border-t border-surface10/20">
              Challenge
            </h3>
            <p class="m-0">{project.data.challenge}</p>
          </div>
        )
      }
      {
        project.data.solution && (
          <div class="animate w-full">
            <h3 class="text-sm tracking-widest uppercase font-normal pt-4 md:pt-6 mb-4 md:mb-6 mt-0 border-t border-surface10/20">
              Solution
            </h3>
            <p class="m-0">{project.data.solution}</p>
          </div>
        )
      }
      {
        project.data.results && (
          <div class="animate w-full">
            <h3 class="text-sm tracking-widest uppercase font-normal pt-4 md:pt-6 mb-4 md:mb-6 mt-0 border-t border-surface10/20">
              Results
            </h3>
            <p class="m-0">{project.data.results}</p>
          </div>
        )
      }
      <div class="animate w-full">
        <h3
          class="text-sm tracking-widest uppercase font-normal pt-4 md:pt-6 mb-4 md:mb-6 mt-0 border-t border-surface10/20"
        >
          Areas of Expertise
        </h3>
        <ul class="flex flex-wrap gap-3 p-0 m-0">
          {
            project.data.tags.map((tag) => (
              <li class="px-3 py-1 rounded whitespace-nowrap overflow-hidden overflow-ellipsis flex gap-2 items-center bg-surface10/10 m-0">
                {tag}
              </li>
            ))
          }
        </ul>
      </div>
    </article>
    <article class="animate">
      <Content />
    </article>
    <div class="grid grid-cols-1 sm:grid-cols-2 gap-4 mt-12">
      <a
        href={`/${prev.collection}/${prev.slug}`}
        class="group p-4 gap-3 flex items-center border rounded-lg hover:bg-surface10/5 border-surface10/15 blend"
      >
        <div class="order-2 w-full h-full group-hover:text-surface10 blend">
          <div class="flex flex-wrap gap-2">
            <div class="text-sm uppercase">Prev</div>
          </div>
          <div class="font-semibold mt-3 text-surface10">
            {prev.data.title}
          </div>
        </div>
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="20"
          height="20"
          viewBox="0 0 24 24"
          fill="none"
          stroke-width="2.5"
          stroke-linecap="round"
          stroke-linejoin="round"
          class="order-1 stroke-current group-hover:stroke-surface10 rotate-180"
        >
          <line
            x1="5"
            y1="12"
            x2="19"
            y2="12"
            class="scale-x-0 group-hover:scale-x-100 translate-x-4 group-hover:translate-x-1 transition-all duration-300 ease-in-out"
          ></line>
          <polyline
            points="12 5 19 12 12 19"
            class="translate-x-0 group-hover:translate-x-1 transition-all duration-300 ease-in-out"
          ></polyline>
        </svg>
      </a>
      <a
        href={`/${next.collection}/${next.slug}`}
        class="group p-4 gap-3 flex items-center border rounded-lg hover:bg-surface10/5 border-surface10/15 transition-colors duration-300 ease-in-out"
      >
        <div class="w-full h-full text-right group-hover:text-surface10 blend">
          <div class="text-sm uppercase">Next</div>
          <div class="font-semibold mt-3 text-surface10">
            {next.data.title}
          </div>
        </div>
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="20"
          height="20"
          viewBox="0 0 24 24"
          fill="none"
          stroke-width="2.5"
          stroke-linecap="round"
          stroke-linejoin="round"
          class="stroke-current group-hover:stroke-surface10"
        >
          <line
            x1="5"
            y1="12"
            x2="19"
            y2="12"
            class="scale-x-0 group-hover:scale-x-100 translate-x-4 group-hover:translate-x-1 transition-all duration-300 ease-in-out"
          ></line>
          <polyline
            points="12 5 19 12 12 19"
            class="translate-x-0 group-hover:translate-x-1 transition-all duration-300 ease-in-out"
          ></polyline>
        </svg>
      </a>
    </div>
  </Container>
</PageLayout>
